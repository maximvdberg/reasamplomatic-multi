<?xml version="1.0" encoding="utf-8"?>
<index version="1" name="ReaSamplOmatic5000 Multi" commit="37041ee5e0943404a68236c93ce1fe8b60e0b9c2">
  <category name="Sampler">
    <reapack name="reasamplomatic_multi.py" type="script" desc="ReaSamplOmatic5000 multi">
      <metadata>
        <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 \fmodern Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 ReaSamploMatic5000 multi\par}
}
]]></description>
      </metadata>
      <version name="1.0.0" author="maxim" time="2022-07-29T14:28:55Z">
        <source main="main">https://github.com/maximvdberg/reasamplomatic-multi/raw/334884ce2ffddc5717d57639b095a67ac199bd8f/Sampler/reasamplomatic_multi.py</source>
      </version>
      <version name="1.0.1" author="maxim" time="2022-08-09T16:36:01Z">
        <source main="main">https://github.com/maximvdberg/reasamplomatic-multi/raw/37041ee5e0943404a68236c93ce1fe8b60e0b9c2/Sampler/reasamplomatic_multi.py</source>
      </version>
    </reapack>
  </category>
  <metadata>
    <description><![CDATA[{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 \fmodern Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 ReaSamplOmatic5000 multi\par}
{\pard \ql \f0 \sa180 \li0 \fi0 ReaSamplOmatic500 multi lets you arrange ReaSamplOmatic5000 instances on a piano roll. This project aims to give REAPER a sampler such as FL Studio's {\field{\*\fldinst{HYPERLINK "https://www.image-line.com/fl-studio-learning/fl-studio-online-manual/html/plugins/DirectWave.htm"}}{\fldrslt{\ul
DirectWave Sampler
}}}
 or the {\field{\*\fldinst{HYPERLINK "https://www.tx16wx.com/"}}{\fldrslt{\ul
TX16Wx Software Sampler
}}}
, while also integrating with REAPER routing.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The script is powered by the excellent {\field{\*\fldinst{HYPERLINK "https://github.com/RomeoDespres/reapy"}}{\fldrslt{\ul
reapy
}}}
, and uses {\field{\*\fldinst{HYPERLINK "https://docs.python.org/3/library/tkinter.html"}}{\fldrslt{\ul
tkinter
}}}
 for the GUI.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 You might also be interested in {\field{\*\fldinst{HYPERLINK "https://forums.cockos.com/showthread.php?t=207972"}}{\fldrslt{\ul
MPL's ReaSamplomatic5000 manager
}}}
, which is similar but focuses mainly on single-note (drum) samples. Definitely check out his useful {\field{\*\fldinst{HYPERLINK "https://github.com/MichaelPilyavskiy/ReaScripts"}}{\fldrslt{\ul
ReaSamplomatic5000 scripts
}}}
 too!\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Contents\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 1.\tx360\tab {\field{\*\fldinst{HYPERLINK "#dependencies-and-installation"}}{\fldrslt{\ul
Dependencies and Installation
}}}
\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab {\field{\*\fldinst{HYPERLINK "#optional-dependencies"}}{\fldrslt{\ul
Optional dependencies
}}}
\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab {\field{\*\fldinst{HYPERLINK "#getting-the-script"}}{\fldrslt{\ul
Getting the script
}}}
\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 2.\tx360\tab {\field{\*\fldinst{HYPERLINK "#usage-notes"}}{\fldrslt{\ul
Usage notes
}}}
\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab {\field{\*\fldinst{HYPERLINK "#overview"}}{\fldrslt{\ul
Overview
}}}
\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab {\field{\*\fldinst{HYPERLINK "#feature-list"}}{\fldrslt{\ul
Features list
}}}
\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab {\field{\*\fldinst{HYPERLINK "#creating-groups"}}{\fldrslt{\ul
Creating groups
}}}
\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab {\field{\*\fldinst{HYPERLINK "#copying-parameters"}}{\fldrslt{\ul
Copying parameters
}}}
\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab {\field{\*\fldinst{HYPERLINK "#keyboard-shortcuts"}}{\fldrslt{\ul
Keyboard shortcuts
}}}
\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 3.\tx360\tab {\field{\*\fldinst{HYPERLINK "#planned-features"}}{\fldrslt{\ul
Planned features
}}}
\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 4.\tx360\tab {\field{\*\fldinst{HYPERLINK "#limitations"}}{\fldrslt{\ul
Limitations
}}}
\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 5.\tx360\tab {\field{\*\fldinst{HYPERLINK "#license"}}{\fldrslt{\ul
License
}}}
\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Dependencies and Installation\par}
{\pard \ql \f0 \sa180 \li0 \fi0 You need to install {\f1 reapy} and {\f1 tkinter} for the program to work. To install {\f1 reapy}, see the instructions over {\field{\*\fldinst{HYPERLINK "https://github.com/RomeoDespres/reapy#installation"}}{\fldrslt{\ul
here
}}}
. Make sure you have Python installed and that it is detected by REAPER. {\f1 tkinter} should be installed by default.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Optional dependencies\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab For drag-and-drop support, install the {\f1 tkinterdnd2} package.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab To show useful tooltips on hover, you need to install {\f1 tktooltip}.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 To install these dependencies, run the following in a terminal:\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 pip install mido tkinterdnd2 tktooltip\par}
{\pard \ql \f0 \sa180 \li0 \fi0 or use whatever Python package manager you have installed.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Getting the script\par}
{\pard \ql \f0 \sa180 \li0 \fi0 You can add the following repository to {\field{\*\fldinst{HYPERLINK "https://reapack.com/"}}{\fldrslt{\ul
ReaPack
}}}
:\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 https://github.com/maximvdberg/reasamplomatic-multi/raw/master/index.xml\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Alternatively, you can download the script from this repository, and run it with Python.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Usage notes\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Overview\par}
{\pard \ql \f0 \sa180 \li0 \fi0 After succesfull installation using ReaPack, you can find {\f1 Script: reasamplomatic_multi.py} in the actions menu. Simply run it (setting a keyshortcut is recommended) to launch the sampler. Note that on Windows it migh take a while to start up. Alternatively, you can run the script outside of REAPER with Python.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 After startup, the multi sampler will show all ReaSamplOmatic5000 instances on the selected track. Press {\f1 Add} to add one. Simply drag it with the mouse to move it, and drag the edges to resize.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Use ctrl+click to add items to the selection. Right click and drag for a nice and quick rectangle select. Hold alt to stretch the items.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Right click anywhere to list a bunch of actions. Most actions will apply to your selection.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Options are available at the top of the window. If you installed {\f1 tktooltip} (which is recommended), they all have a short description. For instance, check {\f1 freeze} to stay on the selected track, and not follow the selection any more. Check {\f1 sync} to disable syncing with REAPER, which might be {\field{\*\fldinst{HYPERLINK "#performance-on-windows"}}{\fldrslt{\ul
too slow on Windows
}}}
.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Feature list\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A short list of miscellaneous features:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Zoom & resize} Scroll the view with the mouse wheel, or click the middle mouse button and drag. Zoom with {\f1 ctrl+mousewheel}, or the {\f1 +} and {\f1 -} buttons. Zoom the piano roll with {\f1 alt+mousewheel}. The window is freely resizable (and you can change the default size in the script).\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Layering} The note ranges align vertically such that they don't overlap. This allows for easy layering of multiple samples.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Syncing} The multi sampler will automatically reflect changes in REAPER, such as renaming of tracks and ReaSamplOmatic5000 instances. Some changes (that take much longer to check) are only updated on refocusing the multi sampler window.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Pitched} By setting the {\f1 Pitched} option, newly added ReaSamplOmatic5000's are set to the {\f1 Note (Semitone shifted)} mode, instead of {\f1 Sample (Ignores MIDI note)}, and {\f1 Obey note-offs} is enabled. Enable this option when adding pitched samples, and disable when adding (unpitched) percussion. Unfortunately, you still {\field{\*\fldinst{HYPERLINK "#no-automatic-pitch-detection"}}{\fldrslt{\ul
need to click the detect pitch button
}}}
.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Groups} The multi sampler integrates with MIDI routing in REAPER. See {\field{\*\fldinst{HYPERLINK "#creating-groups"}}{\fldrslt{\ul
creating groups
}}}
 for more information.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Parameter copy} You can copy and paste specific parameters of the ReaSamplOmatic5000 instances. See {\field{\*\fldinst{HYPERLINK "#copying-parameters"}}{\fldrslt{\ul
copying parameters
}}}
 for more information.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Drag and drop} You can drag and drop samples into the window. Note that to drag and drop from the REAPER media explorer, you need to enable the {\f1 D&D REAPER} option. Go {\field{\*\fldinst{HYPERLINK "#drag-and-drop-from-inside-reaper"}}{\fldrslt{\ul
here
}}}
 to find out why.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Solo and mute} You can solo and mute note ranges.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b MIDI} You can click on the notes on the piano roll to send MIDI data to REAPER. Velocity is dependent on the height of your mouse.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Defaults} If you want, you can change some default values at the top of the script (short descriptions are given). You can change behaviour as well as appearance.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Colors} The multi sampler also uses the track colors. You can set the {\f1 alpha} parameter at the top of the script to change how to colors are used.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Creating groups\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The {\f1 Separate} action takes all ReaSamplOmatic5000 instances on the current track, and separates them over new tracks. It adds a MIDI-route from the selected track to these tracks. This is useful for individual effects processing (for instance when sampling drums: for the bass drum, the snare, hi-hats, etc.). You can still edit the ranges in the original multi sampler window.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 You can select any of these tracks and use the multi sampler on them individually. This acts essentially as a group, where you can add and tweak additional FX for this set of ReaSamplOmatic5000s as you please. Selecting the original parent track again gives you access to all groups at once. In fact, the GUI will show all ReaSamplOmatic5000 instances which are reached through MIDI routing from the selected track (up to a recursion limit, which you can change at the top of the script).\par}
{\pard \ql \f0 \sa180 \li0 \fi0 When the {\f1 Create bus} option is ticked, an additional bus track is created. You can make a folder of the created track with this as the parent track to mix everything together. If you have the {\field{\*\fldinst{HYPERLINK "https://www.sws-extension.org/"}}{\fldrslt{\ul
SWS extension
}}}
 installed, this is done automatically!\par}
{\pard \ql \f0 \sa180 \li0 \fi0 When the {\f1 Separate overlap} option is ticked, all ReaSamploMatic5000s with overlap will be send to the same track when separating. This is handy for instance when designing a snare consisting of multiple samples, which need to remain mixed together when applying FX.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Copying parameters\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The {\f1 Copy/paste params} actions lets you copy any parameters of a specific instance of ReaSamplOmatic5000 to a selection of instances. For instance, you can copy only the ADSR envelope, while leaving the other parameters unchanged.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 To start, select a single note range and right click to open the action menu. Then select {\f1 Copy/paste params}. Two sets are available:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b sample} concerning sample parameters, such as the ADSR, looping, etc.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b note} concerning note and MIDI parameters, concerning note ranges, playback pitch, etc.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A popup will open where you can select which parameters to copy. Fill anything in for the fields you want to copy and simply leave the other ones empty. Afterwards you can select the target note ranges and use the {\f1 Paste params} action to copy the parameters to the selection.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Keyboard shortcuts\par}
{\pard \ql \f0 \sa180 \li0 \fi0 There are keyboard shortcuts for most actions. You can edit them and add more in the script file. You should use the tkinter syntax for this (I think the present bindings should provide a good example).\par}
{\pard \ql \f0 \sa180 \li0 \fi0 | Action | Binding | Description | | -------------------- | ------------- | ------------------------------------------------ | | add | {\f1 a} | Add a ReaSamplOmatic5000 instance | | refresh | {\f1 r} | Resync with REAPER | | separate | {\f1 g} | Separate selection, see {\field{\*\fldinst{HYPERLINK "#creating-groups"}}{\fldrslt{\ul
here
}}}
 | | scroll to center | {\f1 z} | Scroll the view to C2 | | close instance ui | {\f1 c} | Close the FX windows of selection | | undo | {\f1 ctrl+z} | Call {\i undo} inside REAPER | | redo | {\f1 ctrl+Z} | Call {\i redo} inside REAPER | | | | | | freeze | {\f1 f} | Toggles the {\f1 Freeze} option | | dnd_reaper | {\f1 q} | Toggles the {\f1 D&D REAPER} option | | sync | | Toggles the {\f1 Sync} option | | pitched | {\f1 w} | Toggles the {\f1 Pitched} option | | name_by_midi | | Toggles the {\f1 Name by MIDI} option | | create_bus | | Toggles the {\f1 Create bus} option | | separate_overlap | {\f1 e} | Toggles the {\f1 Separate overlap} option | | | | | | copy | {\f1 ctrl+c}, {\f1 y} | Copy selection | | paste | {\f1 ctrl+v}, {\f1 p} | Paste selection | | delete | {\f1 Delete}, {\f1 d} | Delete selection | | select all | {\f1 ctrl+a} | Select all note ranges | | | | | | solo toggle | {\f1 m} | Solo selection | | unsolo all | {\f1 M} | Unsolo selection | | mute toggle | {\f1 s} | Mute selection | | unmute all | {\f1 S} | Unmute selection | | reset solo and mute | {\f1 x} | Unmute and unsolo all note ranges | | | | | | params copy (sample) | {\f1 b} | Copy parameters, see {\field{\*\fldinst{HYPERLINK "#copying-parameters"}}{\fldrslt{\ul
here
}}}
 | | params copy (note) | {\f1 B} | As above, but a different set. | | params paste | {\f1 n} | Paste parameters. |\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Planned Features\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab [ ] Call "detect pitch" from the sampler. See {\field{\*\fldinst{HYPERLINK "#no-automatic-pitch-detection"}}{\fldrslt{\ul
here
}}}
 for more information.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab [ ] Allow {\f1 refresh} to reconnect after closing & reopening REAPER.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab [ ] A way to save user settings without requiring them to edit the script.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab [ ] Shortcut to zoom to fit all note ranges.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab [ ] Testing! There are probably still many bugs, so please let me know if you find any.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Limitations\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel3 \b \fs24 No automatic pitch detection\par}
{\pard \ql \f0 \sa180 \li0 \fi0 After changing the note range for pitched samples, you currently need to manually hit the "Detect pitch" button in each ReaSamplOmatic5000 instance. This is very impractical, and really limits the usability of the program. I already asked {\field{\*\fldinst{HYPERLINK "https://forum.cockos.com/showthread.php?t=19881"}}{\fldrslt{\ul
in this thread
}}}
, perhaps one day this option will be there.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel3 \b \fs24 Docking\par}
{\pard \ql \f0 \sa180 \li0 \fi0 As far as I know, Tk windows cannot be docked in REAPER, so docking the multi sampler is sadly not possible.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel3 \b \fs24 Drag and drop from inside REAPER\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Since drag-and-dropping anything from REAPER freezes the REAPER window, communication with reapy will hang. So the loop which checks for changes in REAPER (such as switching tracks and name changes) will then hang too, which freezes everything.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 This can be circumvented by disabling communication with REAPER whenever doing drag and drop. However, we don't know when the user might initiate drag and drop. As a workaround, we can disable REAPER communication altogether when the multi sampler window is not focused.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The option {\f1 D&D REAPER} does precisely this: turn it on to enable drag-and-drop from inside of REAPER, at the cost of the multi sampler only being updated when its window is focused. If you know a more elegant solution to this, let me know!\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel3 \b \fs24 Performance on Windows\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Performance on Windows is sadly not amazing. Reapy uses Python sockets for communication with REAPER, which seem to be quite slow on Windows. If you notice REAPER becoming laggy when having the multi sampler active, this is most likely due to the automatic syncing with REAPER. To solve this, you can turn off the {\f1 Sync} option to disable this, and instead manually use the {\f1 Refresh} action (default shortcut is {\f1 r}) whenever you need it.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 It is also recommended you turn off {\i Audio/Close audio device when stopped and application is inactive} in the REAPER preferences. Otherwise, REAPER will stop the audio device when focusing the multi sampler window, which can take quite some time.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Additionally, the Tk implementation on Windows is very inefficient in comparison to other platforms. I found the responsiveness of dragging/resizing to be somewhat sluggish, and start up times are quite long.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel3 \b \fs24 Flickering zoom\par}
{\pard \ql \f0 \sa180 \li0 \fi0 There is some flickering while zooming. I'm pretty sure this is a limitation on how tkinter works, as I don't think it is impossible to pause the render callback during resizing. Please tell me if you know of a way to circumvent this!\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 License\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The script is licensed under the GNU GPLv3, see {\field{\*\fldinst{HYPERLINK "LICENSE"}}{\fldrslt{\ul
license
}}}
.\par}
}
]]></description>
  </metadata>
</index>
